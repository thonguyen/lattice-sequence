package lattice {
    class Lattice {
        -DGraph dependencyGraph
        .. Constructors ..
        +Lattice()
        +Lattice(TreeSet<Node> set)
        +Lattice(DAGraph graph)
        .. Predicates ..
        +boolean isLattice()
        +boolean isCN() 
        .. Operations ..
        +Node top()
        +Node bottom()
        +Node meet(Node x, Node y)
        +Node join(Node x, Node y)

        +TreeSet<Node> joinIrreducibles()
        +TreeSet<Node> meetIrreducibles()
        +TreeSet<Comparable> joinIrreducibles(Node n)
        +TreeSet<Comparable> meetIrreducibles(Node n)
        +DAGraph joinIrreduciblesSubgraph()
        +DAGraph meetIrreduciblesSubgraph()
        +DAGraph irreduciblesSubgraph()
        +ConceptLattice joinClosure()
        +ConceptLattice meetClosure()
        +ConceptLattice irreducibleClosure()
        +Context getTable()
        +ImplicationalSystem getImplicationalSystem()

        +DGraph getDependencyGraph()
        #setDependencyGraph(DGraph graph)
        #hasDependencyGraph()
        +ImplicationalSystem getCanonicalDirectBasis()
        +TreeSet getMinimalGenerators()
        +DGraph getArrowRelation()
        +Context getDoubleArrowTable()
    }

    DAGraph <|-- Lattice
}

