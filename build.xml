<?xml version="1.0"?>
<project name="lattices" basedir="." default="jar" xmlns:jacoco="antlib:org.jacoco.ant">

	<!-- Import checkstyle task -->
	<taskdef resource="checkstyletask.properties" classpath="lib/style/checkstyle-5.7-all.jar" />

	<!--  Import JaCoCo Ant tasks  -->
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" classpath="lib/jacoco/jacocoant.jar" />

	<property name="src.dir" value="src" />
	<property name="examples.dir" value="examples" />
	<property name="test.dir" value="test" />
	<property name="doc.dir" value="doc" />
	<property name="api.dir" value="doc/api" />
	<property name="contribute.dir" value="doc/contribute" />
	<property name="tutorial.dir" value="doc/tutorial" />
	<property name="coverage.file" value="jacoco.exec" />

	<property name="build.dir" value="build" />
	<property name="build.src.dir" value="${build.dir}/src" />
	<property name="build.debug.dir" value="${build.dir}/debug" />
	<property name="build.test.dir" value="${build.dir}/test" />
	<property name="build.reports-xml.dir" value="${build.dir}/reports/xml" />
	<property name="build.reports-html.dir" value="${build.dir}/reports/html" />
	<property name="build.examples.dir" value="${build.dir}/examples" />
	<property name="build.api.dir" value="${build.dir}/api" />
	<property name="build.contribute.dir" value="${build.dir}/contribute" />
	<property name="build.tutorial.dir" value="${build.dir}/tutorial" />
	<property name="build.coverage.dir" value="${build.dir}/coverage" />

	<property name="build.jar.dir" value="${build.dir}/jar" />

	<property name="output.examples.dir" value="${build.dir}/output" />
	<property name="examples-class" value="Examples" />

	<target name="rebuild" depends="clean,jar" />

	<target name="test" depends="jar,junit,style,api,coverage,contribute,tutorial" />

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="build">
		<mkdir dir="${build.src.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.src.dir}">
			<!--compilerarg value="-Xlint" /-->
		</javac>
	</target>

	<target name="jar" depends="build">
		<mkdir dir="${build.jar.dir}" />
		<jar destfile="${build.jar.dir}/${ant.project.name}.jar" basedir="${build.src.dir}" />
	</target>

	<target name="build-debug">
		<mkdir dir="${build.debug.dir}" />
		<javac debug="on" includeantruntime="false" srcdir="${src.dir}" destdir="${build.debug.dir}">
			<!--compilerarg value="-Xlint" /-->
		</javac>
	</target>

	<target name="jar-debug" depends="build-debug">
		<mkdir dir="${build.jar.dir}" />
		<jar destfile="${build.jar.dir}/${ant.project.name}-debug.jar" basedir="${build.debug.dir}" />
	</target>

	<target name="build-test" depends="jar-debug">
		<mkdir dir="${build.test.dir}" />
		<javac includeantruntime="false" srcdir="${test.dir}" destdir="${build.test.dir}">
			<classpath>
				<pathelement location="lib/junit/junit-4.11.jar" />
				<pathelement location="lib/junit/hamcrest-core-1.3.jar" />
				<pathelement location="${build.jar.dir}/${ant.project.name}-debug.jar" />
			</classpath>
		</javac>
	</target>

	<target name="build-examples" depends="jar">
		<mkdir dir="${build.examples.dir}" />
		<javac includeantruntime="false" srcdir="${examples.dir}" destdir="${build.examples.dir}">
			<include name="**/*.java" />
			<classpath>
				<pathelement location="${build.jar.dir}/${ant.project.name}.jar" />
			</classpath>
		</javac>
	</target>

	<target name="junit" depends="build-test">
		<mkdir dir="${build.reports-xml.dir}" />
		<jacoco:coverage destfile="${build.dir}/${coverage.file}">
			<junit fork="yes" forkmode="once" haltonfailure="no" showoutput="no" printsummary="true">

				<!--formatter type="plain" usefile="false" /-->
				<formatter type="xml" />
				<classpath>
					<pathelement location="lib/junit/junit-4.11.jar" />
					<pathelement location="lib/junit/hamcrest-core-1.3.jar" />
					<pathelement location="${build.jar.dir}/${ant.project.name}-debug.jar" />
					<pathelement location="${build.test.dir}" />
				</classpath>

				<batchtest fork="true" todir="${build.reports-xml.dir}">
					<fileset dir="${test.dir}" includes="**/*Test.java" />
				</batchtest>
			</junit>
		</jacoco:coverage>
		<junitreport todir="${build.reports-xml.dir}">
			<fileset dir="${build.reports-xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${build.reports-html.dir}" />
		</junitreport>
	</target>

	<target name="coverage" depends="junit">
		<jacoco:report>
			<executiondata>
				<file file="${build.dir}/${coverage.file}" />
			</executiondata>

			<structure name="Java Lattices">
				<classfiles>
				    <fileset dir="${build.debug.dir}" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
				    <fileset dir="${src.dir}" includes="**/*.java" />
				</sourcefiles>
			</structure>

			<html destdir="${build.coverage.dir}" />

			<check>
				<rule element="PACKAGE">
					<limit counter="LINE" value="COVEREDRATIO" minimum="0.85"/>
					<limit counter="CLASS" value="MISSEDCOUNT" maximum="0"/>
				</rule>
			</check>

		</jacoco:report>
	</target>

	<target name="examples" depends="build-examples">
		<mkdir dir="${output.examples.dir}" />
		<java classname="${examples-class}">
			<classpath>
				<pathelement location="${build.jar.dir}/${ant.project.name}.jar" />
				<pathelement location="${build.examples.dir}" />
			</classpath>
			<arg value="${examples.dir}" />
			<arg value="${output.examples.dir}" />
 		</java>
	</target>

	<target name="api" depends="build">
		<mkdir dir="${build.api.dir}" />
		<javadoc sourcepath="${src.dir}" destdir="${build.api.dir}" overview="${api.dir}/README.md" doctitle="Java Lattices">
			<doclet name="ch.raffael.doclets.pegdown.PegdownDoclet" path="lib/doclet/pegdown-doclet-1.1.1-all.jar" />
			<arg value="-extensions" />
			<arg value="fenced_code_blocks,autolinks,definitions,smartypants,tables,wikilinks" />
		</javadoc>
		<copy todir="${build.api.dir}/images">
			<fileset dir="${api.dir}/images" />
		</copy>
	</target>

	<target name="style">
		<checkstyle config="lib/style/style.xml">
			<fileset dir="src" includes="**/*.java" />
			<fileset dir="test" includes="**/*.java" />
		</checkstyle>
	</target>

	<target name="contribute">
		<mkdir dir="${build.contribute.dir}" />
		<exec executable="pandoc" output="${build.contribute.dir}/index.html">
			<arg value="-c"/>
			<arg value="markdown.css" />
			<arg value="${contribute.dir}/title" />
			<arg value="${contribute.dir}/README.md" />
		</exec>
		<copy todir="${build.contribute.dir}" file="${contribute.dir}/markdown.css" />
	</target>

	<target name="tutorial">
		<mkdir dir="${build.tutorial.dir}" />
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/M5.dot" />
			<arg value="-o" />
			<arg value="M5.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/Example.dot" />
			<arg value="-o" />
			<arg value="Example.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/IrreductibleGraph.dot" />
			<arg value="-o" />
			<arg value="IrreductibleGraph.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/IrreductibleClosure.dot" />
			<arg value="-o" />
			<arg value="IrreductibleClosure.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/JoinClosure.dot" />
			<arg value="-o" />
			<arg value="JoinClosure.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/MeetClosure.dot" />
			<arg value="-o" />
			<arg value="MeetClosure.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/DependencyGraph.dot" />
			<arg value="-o" />
			<arg value="DependencyGraph.png" />
		</exec>
		<exec executable="dot">
			<arg value="-Tpng" />
			<arg value="${tutorial.dir}/ArrowRelation.dot" />
			<arg value="-o" />
			<arg value="ArrowRelation.png" />
		</exec>
		<exec executable="pandoc">
			<arg value="--variable=geometry:paper=a4paper,margin=1in" />
			<arg value="${tutorial.dir}/title" />
			<arg value="${tutorial.dir}/introduction.md" />
			<arg value="${tutorial.dir}/tutorial_lattice.md" />
			<arg value="${tutorial.dir}/tutorial_conceptlattice.md" />
			<arg value="${tutorial.dir}/tutorial_bijectivecomponent.md" />
			<arg value="-o" />
			<arg value="${build.tutorial.dir}/tutorial-java-lattices.pdf" />
		</exec>
		<exec executable="rm">
			<arg value="ArrowRelation.png" />
			<arg value="DependencyGraph.png" />
			<arg value="Example.png" />
			<arg value="IrreductibleClosure.png" />
			<arg value="IrreductibleGraph.png" />
			<arg value="JoinClosure.png" />
			<arg value="MeetClosure.png" />
			<arg value="M5.png" />
		</exec>
	</target>

</project>

